<MudText Typo="Typo.h4" Class="mb-3">@Kitchen.Name</MudText>

@if (string.IsNullOrWhiteSpace(Kitchen.Code))
{
    <MudText Typo="Typo.body1" Class="mb-3">Code: @Kitchen.Code</MudText>
}

<MudText Typo="Typo.body1" Class="mb-3">Rating: @((Kitchen.Rating * 100).ToString("F2"))%</MudText>

<MudText Typo="Typo.h5" Class="mb-3">Messages</MudText>

@if (!string.IsNullOrWhiteSpace(KitchenConnectionErrorMessage))
{
    <MudAlert Severity="Severity.Error">@KitchenConnectionErrorMessage</MudAlert>
}
else if (_kitchenHubConnection is null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
}
else if (Messages.Count == 0)
{
    <MudAlert Severity="Severity.Info">No messages, you guys should communicate a little more!</MudAlert>
}
else
{
    <div class="d-flex flex-column gap-3 mb-3" style="max-height: 75vh; overflow-y: auto;">
        @foreach (var message in Messages)
        {
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h6">@message.From to @(message.To ?? "everyone")</MudText>
                    <MudText Typo="Typo.caption">@clientTimeService.GetLocalDateTime(message.Timestamp)</MudText>
                    <MudText Typo="Typo.body1">@message.Content</MudText>
                </MudCardContent>
            </MudCard>
        }
    </div>
}

<MudText Typo="Typo.h5" Class="mb-3">Orders</MudText>

@if (!string.IsNullOrWhiteSpace(KitchenOrdersErrorMessage))
{
    <MudAlert Severity="Severity.Error">@KitchenOrdersErrorMessage</MudAlert>
}
else if (KitchenOrders is null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
}
else if (KitchenOrders.Count == 0)
{
    <MudAlert Severity="Severity.Info">No orders yet</MudAlert>
}
else
{
    <div style="max-height: 75vh; overflow-y: auto;">
        <MudGrid Justify="Justify.Center" Spacing="3">
            @{
                var md = 0;
                if (KitchenOrders.Count >= 2)
                    md = 6;

                var xl = 0;
                if (KitchenOrders.Count >= 3)
                    xl = 4;

                foreach (var kitchenOrder in KitchenOrders)
                {
                    <MudItem xs="12" md="@md" xl="@xl">
                        <KitchenOrderComponent KitchenOrder="@kitchenOrder"/>
                    </MudItem>
                }
            }
        </MudGrid>
    </div>
}